# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\Identity\Infrastructure\Amqp\AMQPIdentityEventBus:
        arguments:
            - '@serializer'
            - '@old_sound_rabbit_mq.identity_producer_producer'

    App\Account\Infrastructure\Amqp\AMQPAccountDomainEventBus:
        arguments:
            - '@serializer'
            - '@old_sound_rabbit_mq.account_activated_producer_producer'

    App\Account\Infrastructure\Db\DBAccountRepository:
        tags:
            - { name: 'account.repository', key: 'db' }

    App\Account\Infrastructure\ElasticAccountRepository:
        tags:
            - { name: 'account.repository', key: 'elastic' }

    App\Account\Application\AccountApplicationService:
        arguments:
            $dbAccountRepository: '@App\Account\Infrastructure\Db\DBAccountRepository'

    App\Account\Domain\AccountFactory:
        arguments:
            $dbAccountRepository: '@App\Account\Infrastructure\Db\DBAccountRepository'


    #Negotiation policies
    App\Negotiation\Domain\Policy\MoreThan2000PLNAutomaticApprovePolicy:
        tags:
            - { name: 'negotiation.automatic.approve.policy' }

    App\Negotiation\Domain\Policy\MoreThan500EURAutomaticApprovePolicy:
        tags:
            - { name: 'negotiation.automatic.approve.policy' }

    #Negotiation event buses

    App\Negotiation\Application\NegotiationEventBus:
        arguments:
            $riskAssessmentApplicationService: '@App\Negotiation\Application\RiskAssessmentApplicationService'
        tags:
            - { name: 'app.negotiation.event.bus' }

    App\Negotiation\Infrastructure\Amqp\AMQPNegotiationEventBus:
        arguments:
            $serializer: '@Symfony\Component\Serializer\SerializerInterface'
            $producer: '@old_sound_rabbit_mq.negotiation_created_producer_producer'
        tags:
            - { name: 'app.negotiation.event.bus' }

    App\Negotiation\Application\NegotiationApplicationService:
        arguments:
            $negotiationAmountAutomaticApprovePolicies: !tagged_iterator negotiation.automatic.approve.policy
            $eventBuses: !tagged_iterator app.negotiation.event.bus



   #Currency event buses
    App\Currency\Application\CurrencyPairApplicationService:
        arguments:
            $domainEventBus: !tagged_iterator app.currency.event.bus

    App\Currency\Infrastructure\Amqp\AMQPCurrencyPairEventBus:
        arguments:
            $serializer: '@Symfony\Component\Serializer\SerializerInterface'
            $createdProducer: '@old_sound_rabbit_mq.currency_pair_created_producer_producer'
            $adjustedProducer: '@old_sound_rabbit_mq.currency_pair_rate_adjusted_producer_producer'
            $deactivatedProducer: '@old_sound_rabbit_mq.currency_pair_deactivated_producer_producer'
        tags:
            - { name: 'app.currency.event.bus' }

    App\Infrastructure\eventbroker\currency\CurrencyPairEventBroker:
        tags:
            - { name: 'app.currency.event.bus' }

  #Quorting service

    App\Quoting\Infrastructure\NegotiationExchangeRateAdvisor:
        arguments:
            $negotiationApplicationService: '@App\Negotiation\Application\NegotiationApplicationService'
        tags:
            - { name: 'app.exchange_rate_advisor' }

    App\Quoting\Infrastructure\RestBaseCurrencyExchangeRateAdvisor:
        arguments:
            $currencyPairApplicationService: '@App\Currency\Application\CurrencyPairApplicationService'
        tags:
            - { name: 'app.exchange_rate_advisor' }

    App\Quoting\Infrastructure\SubscriptionExchangeRateAdvisor:
        tags:
            - { name: 'app.exchange_rate_advisor' }

    App\Quoting\Application\QuoteApplicationService:
        arguments:
            $currencyExchangeRateAdvisors: !tagged_iterator app.exchange_rate_advisor

